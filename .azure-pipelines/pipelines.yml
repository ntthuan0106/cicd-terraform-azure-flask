# pipelines.yml

trigger:
  branches:
    include:
      - main
resources:
  repositories:
    - repository: dacn
      type: github
      name: 'ntthuan0106/dacn'
      endpoint: 'ntthuan0106'

# Import variables from variables.yml
variables:
- template: './variables.yml'
- group: 'NGROK'
- group: 'AZURE_CREDENTIALS'

stages:
- stage: BuildAndPush
  jobs:
  - job: BuildAndPushToACR
    displayName: Build and Push Docker Image to ACR
    pool: 
      name: 'Default'
      demand: Agent.Name -equals Agent1_DACN
    steps:
    - task: Docker@2
      displayName: Login to ACR
      inputs:
        command: login
        containerRegistry: $(dockerRegistryServiceConnection)
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        Dockerfile: $(dockerFilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        repository: $(imageName)
        tags: |
          $(imageTag)
- stage: Deploy
  jobs: 
  - job: Deploy
    displayName: Deploy To AKS
    pool:
      name: 'Default'
      demands: Agent.Name -equals Agent1_DACN
    steps:
    - bash: |
        echo "Updating values.yaml with environment variables..."
        yq eval ".credentials.apiKey = \"$(NGROK_API_KEY)\"" -i ./k8s/values.yaml
        yq eval ".credentials.authtoken = \"$(NGROK_AUTH_TOKEN)\"" -i ./k8s/values.yaml
      displayName: Overwrite values.yaml
    - bash: |
        echo "Install ngrok helm chart"
        helm repo add ngrok https://charts.ngrok.com
        helm install ngrok-ingress-controller ngrok/kubernetes-ingress-controller \
          --namespace test \
          --create-namespace \
          -f values.yaml
      displayName: Install ngrok helm chart
    - task: Kubernetes@1
      inputs:
        connectionType: 'Kubernetes Service Connection'
        kubernetesServiceEndpoint: $(aksServiceConnection)
        command: apply
        arguments: |
          -f ./k8s/deployment.yaml
          -f ./k8s/service.yaml
          -f ./k8s/ingress.yaml
        
