##./.github/workflows/deploy_aks.yaml
name: Deploy to AKS

on:
  push: 
    branches:
      - main
    paths:
      - 'web-app/**'
      - '.github/workflows/**'
  workflow_run:
    workflows: ["Build and Push Docker Image to ACR"]
    types:
      - completed

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    steps:
        - name: Checkout code
          uses: actions/checkout@v4
  
        - name: Log in to Azure
          uses: azure/login@v2
          with:
            creds: ${{ secrets.AZURE_CREDENTIALS }}
        
        - name: Get AKS credentials
          run: az aks get-credentials --resource-group Cluster --name cluster

        - name: Set up Helm
          uses: azure/setup-helm@v4.2.0
    
        - name: Add Ngrok Helm repo
          run: helm repo add ngrok https://charts.ngrok.com

        - name: Install yq
          run: |
            sudo wget https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 -O /usr/bin/yq
            sudo chmod +x /usr/bin/yq

        - name: Update values.yaml
          env:
            NGROK_API_KEY: ${{ secrets.NGROK_API_KEY }}
            NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}
          run: |
            yq eval ".credentials.apiKey = \"$NGROK_API_KEY\"" -i ./k8s/values.yaml
            yq eval ".credentials.authtoken = \"$NGROK_AUTH_TOKEN\"" -i ./k8s/values.yaml
          

        - name: Install Ngrok Kubernetes Ingress Controller
          run: |
            helm install ngrok-ingress-controller ngrok/kubernetes-ingress-controller \
              --namespace test \
              --create-namespace \
              -f k8s/values.yaml
    
        - name: Deploy web app to AKS
          run: |
            kubectl apply -f k8s/deployment.yaml
            kubectl apply -f k8s/service.yaml
            kubectl apply -f k8s/ingress.yaml